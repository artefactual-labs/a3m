[project]
name = "a3m"
dynamic = ["version"]
description = "Lightweight Archivematica"
requires-python = ">=3.12"
readme = "README.rst"
license = {file = "LICENSE"}
dependencies = [
  # Used by client modules
  "ammcpc~=0.1",
  "metsrw~=0.4",
  "bagit",
  "lxml~=4.9",
  "unidecode~=1.3",
  "pygfried~=0.6",
  # Django ORM
  "Django~=4.2",
  "django-stubs-ext~=4.2",
  # Infra
  "prometheus_client~=0.17",
  "requests~=2.31",
  "platformdirs~=4.1",
  "click~=8.1",
  "rich~=13.6",
  "tenacity~=8.2",
  "boto3~=1.28",
  # MCPServer"
  "jsonschema~=4.19",
  "grpcio~=1.59",
  "grpcio-reflection~=1.59",
  "grpcio-status~=1.59",
  "googleapis-common-protos~=1.61",
]
keywords = [
  "archivematica",
  "preservation",
]
classifiers = [
  "Development Status :: 1 - Planning",
  "Environment :: Console",
  "Intended Audience :: Information Technology",
  "License :: OSI Approved :: GNU Affero General Public License v3",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.12",
  "Topic :: System :: Archiving",
  "Topic :: System :: Archiving :: Backup",
  "Topic :: System :: Archiving :: Compression",
  "Topic :: System :: Archiving :: Mirroring",
  "Topic :: System :: Archiving :: Packaging",
]
authors = [
  {name = "Artefactual Systems Inc.", email = "info@artefactual.com"}
]
maintainers = [
  {name = "Artefactual Systems Inc.", email = "info@artefactual.com"}
]

[project.urls]
homepage = "https://github.com/artefactual-labs/a3m"
documentation = "https://a3m.readthedocs.io/"
repository = "https://github.com/artefactual-labs/a3m"
issues = "https://github.com/artefactual-labs/a3m/issues"

[project.scripts]
a3m = "a3m.cli.client.__main__:main"
a3md = "a3m.cli.server.__main__:main"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.uv]
dev-dependencies = [
  "pytest~=8.3.3",
  "pytest-cov~=5.0.0",
  "pytest-django~=4.9.0",
  "pytest-env~=1.1.5",
  "pytest-mock~=3.14.0",
  "coverage~=7.6.1",
  "grpcio-tools~=1.66.1",
  "mypy~=1.11.2",
  "vulture~=2.12",
  "pre-commit~=3.8.0",
  "sphinx~=8.0.2",
  "sphinxcontrib-mermaid~=0.9.2",
  "doc8~=1.1.2",
  "ruff~=0.6.7",
  "scriv~=1.5.1",
  "django-types~=0.19.1",
  "types-lxml~=2024.9.16",
  "types-requests~=2.32.0.20240914",
  "types-protobuf~=5.28.0.20240924",
]

[tool.uv.sources]
bagit = { git = "https://github.com/artefactual-labs/bagit-python", rev = "902051d8410219f6c5f4ce6d43e5b272cf29e89b" }

[tool.pytest.ini_options]
env = [
  "DJANGO_SETTINGS_MODULE=a3m.settings.test",
]
filterwarnings = [
  "error",
  "ignore:^Deprecated call to `pkg_resources.declare_namespace:DeprecationWarning",
  "ignore:^pkg_resources is deprecated:DeprecationWarning:bagit.*",
  "ignore:.*uses PyType_Spec with a metaclass:DeprecationWarning",
  "ignore:.*datetime.datetime.utcfromtimestamp:DeprecationWarning:google.*",
  "ignore:.*datetime.datetime.utcnow:DeprecationWarning:metsrw.*",
]
norecursedirs = [
  "_build",
  "tmp*",
  "hack",
  ".venv",
]
python_files = [
  "tests.py",
  "test_*.py",
  "*_tests.py",
]
testpaths = [
  "tests",
]

[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
select = ["E", "F", "I", "S", "W"]
ignore = [
  "E402",
  "E501",
  "E722",
  "W191",
  "S603",
]
exclude = [
  "a3m/settings/**/*",
  "a3m/api/**/*",
]

[tool.ruff.lint.per-file-ignores]
"{docs,tests}/**/*" = ["S"]

[tool.ruff.lint.isort]
force-single-line = true

[tool.pyright]
include = [
  "a3m",
  "tests",
]
exclude = [
  "a3m/api/*/**",
  "a3m/main/migrations/*/**",
]
typeCheckingMode = "basic"

[tool.mypy]
ignore_missing_imports = true
namespace_packages = true
files = [
  "a3m",
]

[[tool.mypy.overrides]]
module = "a3m.main.migrations.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "a3m.main.models"
ignore_errors = true

[[tool.mypy.overrides]]
module = "a3m.server.rpc.*"
ignore_errors = true

[tool.vulture]
paths = [
  "a3m",
]
exclude = [
  "a3m/settings",
  "a3m/main/models.py",
  "a3m/main/migrations",
  "a3m/server/rpc/proto",
  "a3m/api",
]

[tool.coverage.run]
source = [
  "a3m",
]
branch = true
omit = [
  "a3m/api/*",
  "a3m/server/rpc/*",
  "a3m/settings/*",
  "tests/*",
]

[tool.doc8]
ignore-path = [
  "docs/_build",
]
max-line-length = 80
