name: Tests
on:
  pull_request:
  push:
    branches:
    - main
jobs:
  tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - {name: Python 3.9, python: '3.9', os: ubuntu-latest, tox: py, codecov: true}
        - {name: Lint, python: '3.9', os: ubuntu-latest, tox: lint, codecov: false}
        - {name: Type, python: '3.9', os: ubuntu-latest, tox: type, codecov: false}
        - {name: Pylint, python: '3.9', os: ubuntu-latest, tox: pylint, codecov: false}
        - {name: Vulture, python: '3.9', os: ubuntu-latest, tox: vulture, codecov: false}
        - {name: Bandit, python: '3.9', os: ubuntu-latest, tox: bandit, codecov: false}
    steps:
    - name: Check out source code
      uses: actions/checkout@v2
    - name: "Create external volume"
      run: |
        make create-volume
    - name: "Run toxenv"
      run: |
        make tox ARG=${{ matrix.tox }}
      env:
        PYTHON_VERSION: ${{ matrix.python }}
    - name: Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./.coverage.xml
      if: ${{ matrix.codecov }}
  e2e:
    name: e2e
    runs-on: ubuntu-latest
    steps:
    - name: Check out source code
      uses: actions/checkout@v2
    - name: Compute image name
      run: |
        echo "A3M_IMAGE=artefactual-labs/a3m:sha-${GITHUB_SHA::7}" >> $GITHUB_ENV
    - name: Pull Docker layer cache
      uses: satackey/action-docker-layer-caching@v0
      with:
        key: docker-layer-caching-${{ github.workflow }}-test-{hash}
        restore-keys: docker-layer-caching-${{ github.workflow }}-test-
    - name: Build Docker image
      run: |
        docker build . --file Dockerfile --tag ${A3M_IMAGE}
      shell: bash
    - name: Run command
      run: |
        docker run --rm --entrypoint=python --env=A3M_DEBUG=yes ${A3M_IMAGE} -m a3m.cli.client \
          --name=MARBLES \
          https://github.com/artefactual/archivematica-sampledata/raw/master/SampleTransfers/Images/pictures/MARBLES.TGA
