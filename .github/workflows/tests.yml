name: Tests
on:
  pull_request:
  push:
    branches:
    - main
jobs:
  tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - {name: Python 3.10, python: '3.10', os: ubuntu-latest, tox: py, codecov: true}
        - {name: Lint, python: '3.10', os: ubuntu-latest, tox: lint, codecov: false}
        - {name: Type, python: '3.10', os: ubuntu-latest, tox: type, codecov: false}
        - {name: Pylint, python: '3.10', os: ubuntu-latest, tox: pylint, codecov: false}
        - {name: Vulture, python: '3.10', os: ubuntu-latest, tox: vulture, codecov: false}
        - {name: Bandit, python: '3.10', os: ubuntu-latest, tox: bandit, codecov: false}
    steps:
    - name: Check out source code
      uses: actions/checkout@v2
    - name: "Create external volume"
      run: |
        make create-volume
    - name: "Run toxenv"
      run: |
        make tox ARG=${{ matrix.tox }}
      env:
        PYTHON_VERSION: ${{ matrix.python }}
    - name: Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./.coverage.xml
      if: ${{ matrix.codecov }}
  e2e:
    name: e2e
    runs-on: ubuntu-latest
    steps:
    - name: Check out source code
      uses: actions/checkout@v2
    - name: Build Docker image
      run: |
        make build
      shell: bash
    - name: Run command
      run: |
        docker run --rm --entrypoint=python --env=A3M_DEBUG=yes a3m_a3m -m a3m.cli.client \
          --name=MARBLES \
          https://github.com/artefactual/archivematica-sampledata/raw/master/SampleTransfers/Images/pictures/MARBLES.TGA
